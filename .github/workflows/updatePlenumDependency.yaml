name: Update Plenum Dependency

on:
  push:
    tags:        
      - setPlenum-v**

jobs:
  taginfos:
    name: get Tag infos
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-release-info.outputs.version }}
      isPreRelease: ${{ steps.get-release-info.outputs.isRC }}
      Branch: ${{ steps.setPRBranch.outputs.prBranch }}
      BASE: ${{ steps.branch.outputs.BASE}}
      nodeVersion: ${{ steps.nodeVersion.outputs.nodeVersion}}
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: extract branch 
        id: branch
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw/origin\/}
          echo ::set-output\ name=BASE::$branch
          echo "::debug::BASE is being set to $branch"
      - name: get-release-info
        id: get-release-info
        uses: pschlarb/indy-shared-gha/.github/actions/get-release-info@parametrization
        with:
          versionString: "${{ github.ref }}"
      - name: setPRBranch
        id: setPRBranch
        run: |
          if  [[ "${{ steps.get-release-info.outputs.isRC }}" == "true" ]]; then
            echo ::set-output\ name=prBranch::update-plenum-rc-version
          else
            echo ::set-output\ name=prBranch::update-plenum-version
          fi
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install deps for version change
        run: pip install base58
      - name: Get New Node Version
        id: nodeVersion
        run: |
          major=$(python3 -c "from indy_node import load_version; patch = load_version().parts[0]; print('' if patch is None else patch)")
          minor=$(python3 -c "from indy_node import load_version; patch = load_version().parts[1]; print('' if patch is None else patch)")
          patch=$(python3 -c "from indy_node import load_version; patch = load_version().parts[2]; patch+=1; print('' if patch is None else patch)")
          if  [[ "${{ inputs.isRC }}" == "true" ]]; then
            echo ::set-output\ name=nodeVersion::${major}.${minor}.${patch}rc1
          else
            echo ::set-output\ name=nodeVersion::${major}.${minor}.${patch}
          fi
      # - name: Get new Node Version
      #   id: nodeVersion
      #   uses: ./.github/actions/getNewNodeVersion
      #   with:
      #     isRC: ${{ steps.get-release-info.outputs.isRC }}

  updateAndCommit:
    runs-on: ubuntu-latest
    needs: taginfos
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_PR_PAT }}
      - name: Update Setup.py
        run: |
          sed -E -i 's/indy-plenum==[[:digit:]]+.[[:digit:]]+.[[:digit:]]+(.(dev|rc)[[:digit:]]+)?/indy-plenum==${{needs.taginfos.outputs.version}}/g' setup.py
      - name: CommitAndTag
        uses: EndBug/add-and-commit@v9
        with:
          author_name: ${{ github.actor }} 
          author_email: ${{ github.event.pusher.email }}
          commit: --signoff
          message: 'Update Plenum Dependency to  ${{needs.taginfos.outputs.version}}'
          new_branch: ${{ needs.taginfos.outputs.Branch}}
          tag: "setRelease-v${{needs.taginfos.outputs.nodeVersion}}"